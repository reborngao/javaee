<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
 <!--配置整合mybatis过程-->

    <!--1、配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    

    
     	<!--2 阿里 druid数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init"
	 destroy-method="close">  
       <!-- 数据库基本信息配置 -->
         <property name="url" value="${jdbc.url}" />  
         <property name="username" value="${jdbc.username}" />  
         <property name="password" value="${jdbc.password}" />  
         <property name="driverClassName" value="${jdbc.driverClassName}" />  
         <property name="filters" value="${jdbc.filters}" />  
   		 <!-- 最大并发连接数 -->
         <property name="maxActive" value="${jdbc.maxActive}" />
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="${jdbc.initialSize}" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="${jdbc.maxWait}" />
         <!-- 最小空闲连接数 -->
         <property name="minIdle" value="${jdbc.minIdle}" />  
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${jdbc.validationQuery}" />  
         <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />  
         <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />  
         <property name="testOnReturn" value="${jdbc.testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" />
         <!-- 打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
         <!-- 1800秒，也就是30分钟 -->
         <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
         <!-- 关闭abanded连接时输出错误日志 -->   
         <property name="logAbandoned" value="${jdbc.logAbandoned}" />
   		
	</bean> 
	<!-- 事物处理 -->
  	<aop:config >
			<aop:pointcut id="pc" expression="execution(* com.reborn.manage.service.*.*(..))" />
			<aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
	</aop:config>
 		<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception"  />
		</tx:attributes>
	</tx:advice>
	<bean   id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		
	</bean>  
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	 <!--3、配置SqlSessionFactory对象-->
	 <bean  id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	 <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
       <!--配置mybatis全局配置文件:mybatis-config.xml-->
     	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--扫描entity包,使用别名,多个用;隔开-->
   <!--      <property name="typeAliasesPackage" value="com.yingjun.ssm.entity"/> -->
        <!--扫描sql配置文件:mapper需要的xml文件-->
       <property name="mapperLocations" value="classpath:mapper/*.xml"/> 
	 </bean>
	 
	
	
	<!--4、配置扫描Dao接口包,动态实现DAO接口,注入到spring容器-->
   <!--  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      注入SqlSessionFactory
    	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    	  给出需要扫描的Dao接口
    	<property name="basePackage" value="com.reborn.mapper"></property>
    </bean> -->
</beans>